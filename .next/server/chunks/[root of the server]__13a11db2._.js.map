{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dontu/Downloads/osmo-main/osmo-main/app/api/livekit-token/route.js"],"sourcesContent":["import { AccessToken } from 'livekit-server-sdk';\r\nimport { NextResponse } from 'next/server';\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const { roomName, participantName } = await req.json();\r\n    \r\n    // Create a new access token\r\n    const at = new AccessToken(\r\n      process.env.LIVEKIT_API_KEY,\r\n      process.env.LIVEKIT_API_SECRET,\r\n      {\r\n        identity: participantName,\r\n        name: participantName,\r\n        ttl: 60 * 60 * 2, // 2 hours\r\n      }\r\n    );\r\n\r\n    // Grant access to the room\r\n    at.addGrant({\r\n      room: roomName,\r\n      roomJoin: true,\r\n      canPublish: true,\r\n      canSubscribe: true,\r\n    });\r\n\r\n    // Generate the token\r\n    const token = at.toJwt();\r\n\r\n    return NextResponse.json({ token });\r\n  } catch (error) {\r\n    console.error('Error generating token:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to generate token' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;;;;;;AACA;;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,MAAM,IAAI,IAAI;QAEpD,4BAA4B;QAC5B,MAAM,KAAK,IAAI,YACb,QAAQ,GAAG,CAAC,eAAe,EAC3B,QAAQ,GAAG,CAAC,kBAAkB,EAC9B;YACE,UAAU;YACV,MAAM;YACN,KAAK,KAAK,KAAK;QACjB;QAGF,2BAA2B;QAC3B,GAAG,QAAQ,CAAC;YACV,MAAM;YACN,UAAU;YACV,YAAY;YACZ,cAAc;QAChB;QAEA,qBAAqB;QACrB,MAAM,QAAQ,GAAG,KAAK;QAEtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}